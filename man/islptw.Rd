% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/islptw.R
\name{islptw}
\alias{islptw}
\title{Compute asymptotically linear IPTW estimators with super learning 
for the propensity score}
\usage{
islptw(W, A, Y, a_0 = unique(A), SL_g = NULL, glm_g = NULL,
  SL_Qr = NULL, glm_Qr = NULL, returnModels = TRUE, verbose = FALSE,
  maxIter = 2, tolIC = 1/length(Y), tolg = 0.01)
}
\arguments{
\item{W}{A \code{data.frame} of named covariates}

\item{A}{A vector of binary treatment assignment (assumed to be equal to 0 or 1)}

\item{Y}{A numeric of continuous or binary outcomes.}

\item{a_0}{A vector of treatment levels at which to compute the adjusted mean outcome.}

\item{SL_g}{A vector of characters or a list describing the Super Learner library to be used 
for the propensity score. See \code{link{SuperLearner::SuperLearner}} for details.}

\item{glm_g}{A character describing a formula to be used in the call to \code{glm} for the propensity score. Ignored
if \code{SL_g!=NULL}.}

\item{SL_Qr}{A vector of characters or a list describing the Super Learner library to be used 
for the first reduced-dimension regression.}

\item{glm_Qr}{A character describing a formula to be used in the call to \code{glm} for the first reduced-dimension regression. Ignored
if \code{SL_Qr!=NULL}. The formula should use the variable name \code{'gn'}.}

\item{returnModels}{A boolean indicating whether to return model fits for the propensity score
and reduced-dimension regressions.}

\item{verbose}{A boolean indicating whether to print status updates.}

\item{maxIter}{A numeric that sets the maximum number of iterations the TMLE can perform in its fluctuation step.}

\item{tolIC}{A numeric that defines the stopping criteria based on the empirical mean
of the scores of the fluctuation submodels submodels. Setting to \code{"default"}}

\item{tolg}{A numeric indicating the minimum value for estimates of the propensity score.}
}
\value{
An object of class \code{"islptw"}.
\describe{
 \item{\code{islptw_tmle}}{A \code{list} of point estimates and 
       covariance matrix for the IPTW estimator based on a targeted propensity 
		  score. }
 \item{\code{islptw_tmle_nuisance}}{A \code{list} of the final TMLE estimates of the
       propensity score (\code{$gnStar}) and reduced-dimension regression (\code{$QrnStar}) 
		  evaluated at the observed data values.}
 \item{\code{islptw_os}}{A \code{list} of point estimates and covariance matrix for the
		  one-step correct IPTW estimator.}
 \item{\code{islptw_os_nuisance}}{A \code{list} of the initial estimates of the
       propensity score and reduced-dimension regression evaluated at the observed data values.}
 \item{\code{iptw}}{A \code{list} of point estimates for the standard IPTW estimator. No
		  estimate of the covariance matrix is provided because theory does not support asymptotic
		  Normality of the IPTW estimator if super learning is used to estimate the propensity score.}
 \item{\code{aiptw}}{A \code{list} of doubly-robust point estimates and non-doubly-robust
       covariance matrix for the standard AIPTW estimator.}
 \item{\code{gcomp}}{A \code{list} of non-doubly-robust point estimates and non-doubly-robust
       covariance matrix for the standard G-computation estimator. If super learner is used
       there is no guarantee of correct inference for this estimator.}
 \item{\code{QnMod}}{The fitted object for the outcome regression. Returns \code{NULL}
       if \code{returnModels = FALSE}.}
 \item{\code{gnMod}}{The fitted object for the propensity score. Returns \code{NULL} if
       \code{returnModels = FALSE}.}
 \item{\code{QrnMod}}{The fitted object for the reduced-dimension regression that guards 
       against misspecification of the outcome regression. Returns \code{NULL} if 
       \code{returnModels = FALSE}.}
 \item{\code{a_0}}{The treatment levels that were requested for computation of 
       covariate-adjusted means.}
}
}
\description{
Compute asymptotically linear IPTW estimators with super learning 
for the propensity score
}
\examples{
# load super learner
library(SuperLearner)
# simulate data 
set.seed(123456)
n <- 200
W <- data.frame(W1 = runif(n), W2 = rnorm(n))
A <- rbinom(n,1,plogis(W$W1 - W$W2))
Y <- rbinom(n, 1, plogis(W$W1*W$W2*A))

fit1 <- islptw(W = W, A = A, Y = Y, a_0 = c(1,0),
               SL_g=c("SL.glm","SL.mean","SL.step"),
               SL_Qr="SL.npreg")
}
